<p id="notice"><%= notice %></p>
<div class="container text-center containerShowHtml">
  <div class="row">
    <div class="col-md-6 offset-md-3 col-xs-12"> 
      <div class="panel panel-default">
      <div class="panel-heading"><h3>Stay safe!</h3></div>
      <hr><br>
        <div class="panel-body panelBodyShowHtml"> 
          <strong>Start address:</strong>
          <%= @walk.start_location.address %>
          <br>
          <strong>End address:</strong>
          <%= @walk.end_location.address %>
        </div>
        <div class="panel-footer">
          <% if @walk.fatalities %>
          <p>You selected the following map overlay: <strong>Fatalities</strong></p> 
          <% end %>
          <% if @walk.crime %>
          <p>You selected the following map overlay: <strong>Crime</strong></p> 
          <% end %>
        </div>
  <div class="form-group">
    <%= form_for(@issue) do |f| %>
      <%= f.text_field :lat, class:"form-control", id:"issue_lat", style:"display:none;" %>
      <%= f.text_field :lng , class:"form-control" , id:"issue_long", style:"display:none;" %>
      <div id="allFields" style="display:none;">
        <div class="field">
          <%= f.label :description %>
          <%= f.text_field :description , class:"form-control" , id:"issue_desc" %>
        </div>
        <div class="field">
          <%= f.label :category %>
          <%= f.select :category, ['Does Not Exist', 'Large Crack', 'Obstacle'] %>
        </div>
        <div class="actions">
          <%= f.submit "Report it!", class:"btn btn-large btn-primary", id:'submitted' %>
        </div>
      </div>
    <% end%>
  <br>
    <div class="container text-center">
      <div class="row">
        <div class="col-md-12">
          <p class="positionConfirm">Want to report an issue?</p>  
          <button id='confirm' class="btn btn-primary" >Yes, confirm my position</button>
        </div>
      </div> <!--row-->
      <br>
      <div class="row">
        <div class="col-md-12">
          <p class="positionConfirm">What seems to be the problem?</p> 
          <button id='report' class="btn btn-primary">Report Issue</button> 
        </div>
      </div> <!--row-->
    </div> <!--container-->
  </div> <!--form-group-->
</div> <!--panel-default-->
</div> <!--col-->


<!-- Inside the map -->
<%= content_tag :div,
  class: "start_information",
  data: {lat: @walk.start_location.latitude, lng: @walk.start_location.longitude} do %>
<% end %>

<%= content_tag :div,
  class: "end_information",
  data: {lat: @walk.end_location.latitude, lng: @walk.end_location.longitude} do %>
<% end %>

<%= content_tag :div,
  class: "all_issues",
  data: {issues: @issues} do %>
<% end %>

<div class="col-md-12">
  <div id="map" style="height: 500px; width: 100%; margin: auto; position: none;"></div> <!-- changed css styles -->
  <!-- 
  @media screen and (max-width:399px) {
    width: 100%; 
    height: 300px;
    margin: auto;
    position: none;
  }
  @media screen and (min-width:400px) {
    width: 100%; 
    height: 500px;
    margin: auto;
    position: none;
  }
  @media screen and (min-width:763px) {
    width: 100%; 
    height: 500px;
    margin: auto;
    position: none;
  }
  @media screen and (min-width:992px) {
    width: 100%; 
    height: 500px;
    margin: auto;
    position: none;
  } -->

</div> <!--map col-->
</div> <!--row-->
</div> <!--container-->


 <script>
 window.onload =function(){
   var directionsDisplay;
   var directionsService = new google.maps.DirectionsService();

   var currentLat = $('.start_information').data('lat');
   var currentLng = $('.start_information').data('lng');

   var endLat = $('.end_information').data('lat');
   var endLng = $('.end_information').data('lng');
 //   var currentLat = 30.263811840754933;//need to build this
 //   var currentLng = -97.74955529719591; //need to build this

 // Route coordinates
 var start_loc = new google.maps.LatLng(currentLat, currentLng);
 var end_loc = new google.maps.LatLng(endLat, endLng);

 calcRoute();

 //Crime Points
  var crimePoints;

  directionsDisplay = new google.maps.DirectionsRenderer();

  var mapOptions = {
         center: new google.maps.LatLng(currentLat, currentLng),
         zoom: 10,
         mapTypeId: google.maps.MapTypeId.ROADMAP
     };

     //initializing map
     var map = new google.maps.Map(document.getElementById('map'), mapOptions);

     directionsDisplay.setMap(map);

     var geoCoder = new google.maps.Geocoder();

     function addNewMarker(markerMap, markerLat, markerLng, draggable, markerIcon){
         //create new marker
         console.log(markerLat, markerLng);
         var marker = new google.maps.Marker({
             position: new google.maps.LatLng(markerLat, markerLng),
             draggable: draggable || false,
             icon: markerIcon || 'https://raw.githubusercontent.com/google/material-design-icons/master/maps/1x_web/ic_add_location_black_24dp.png'
         });
         //run setmap
         marker.setMap(markerMap);
         return marker;
     }
     ////crime map data
     var heatmapData = [];

  $.ajax({
       url: 'https://data.austintexas.gov/resource/cjvh-tswx.json',
       error: function() {
          console.error('an error occurred');
       },
       success: function(data) { ///is this working properly?
        crimePoints = data.filter(function(point){
          if(point.go_location && point.go_location_zip){
            geoCoder.geocode({'address': point.go_location.trim() + " " + point.go_location_zip.trim()}, function(result, status){
              if(status=="OK"){
                point.lat = result[0].geometry.location.lat();
                point.lng = result[0].geometry.location.lng();
                heatmapData.push(new google.maps.LatLng(point.lat, point.lng));
              }
          });
          }

        });
        var heatmap = new google.maps.visualization.HeatmapLayer({
      data: heatmapData
    });
    heatmap.setMap(map);
       },
       type: 'GET'
    });

  //fatalities data
  var fatalMarkers = [];
  var fatalitiesPoints;
  $.ajax({
       url: 'https://data.austintexas.gov/resource/i3kd-c47g.json?killed_driver_pass=ped',
       error: function() {
          console.error('an error occurred');
       },
       success: function(data) { ///is this working properly?
        fatalitiesPoints = data.filter(function(point){
          point.lat = point.location_1.coordinates[0];
          point.lng = point.location_1.coordinates[1];
          fatalMarkers.push(new google.maps.Marker({
              position: new google.maps.LatLng(point.lat, point.lng)
            }));

        });
        var markerCluster = new MarkerClusterer(map, fatalMarkers,
             {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'}
         );
       },
       type: 'GET'
    });

    //******
    var newMarker;
    //adding issue by dropping pin on map
    //on click will add draggable pin on current location
    var dropButton = document.getElementById('report');
    dropButton.addEventListener('click', function(e){
      console.log('triggered');
      newMarker = addNewMarker(map, currentLat, currentLng, true);
      console.log('marker', newMarker);
      $("#confirm").css("display","block");
    });

    //form will pop up with description field and category field

    //custom icons
       var iconBase = 'https://raw.githubusercontent.com/google/material-design-icons/master/';
       var icons = {
             dne: iconBase + 'social/1x_web/ic_sentiment_dissatisfied_black_24dp.png',
             crack: iconBase + 'maps/1x_web/ic_terrain_black_24dp.png',
             obstacle: iconBase + 'alert/1x_web/ic_error_outline_black_24dp.png'
           };

     var confirmBtn = document.getElementById('confirm');
      confirmBtn.addEventListener('click', function(e){
       $("#issue_lat")[0].value = newMarker.position.lat();
       $("#issue_long")[0].value = newMarker.position.lng();
       $("#allFields").css("display","block");
       $("#confirm").css("display","none");
     });
    var submitBtn = document.getElementById('submitted');
    submitBtn.addEventListener('click', function(e){

      var categoryName;//needs to be "name" of category user picks
      var newIssue = {
        lat: newMarker.position.lat(),
        lng: newMarker.position.lng(),
        description: 'sample description', ///needs to come from user input
        category: 'sample category', //needs to come from user input
        iconImage: icons[categoryName]
      };
      //Still need to write on the rails form

     //change icon according to what category user sets
     newMarker.setIcon(icons[categoryName]);
    });
   //////under construction - need to connect to db


   //

    var issuePoints= $('.all_issues').data('issues');
    console.log(issuePoints);
    displayIssues(issuePoints);
    //need to query database and load markers on load
     function displayIssues(issuePoints) { ///is this working properly?
          issuePoints.forEach(function(point){
            // issuePoints.push(new google.maps.Marker({
           //      position: new google.maps.LatLng(point.lat, point.lng)
           //     }));
            addNewMarker(map, point.lat, point.lng, false);
          });
    }
   //////////////

  //need to query database and load markers on load

  //Route Calculation

  function calcRoute() {
      //create directions request object
      var request = {
          origin: start_loc,
          destination: end_loc,
          provideRouteAlternatives: true,
          travelMode: 'WALKING'
      };
      //call directionsService.route to initiate a request to the directions service.
      //pass it a directions request object and a callback method to execute upon
      //receipt of response
      directionsService.route(request, function(response, status) {
          if (status == 'OK') {
              //loop through and display route options
              for (var i = 0, len = response.routes.length; i < len; i++) {
                  //display directionsResult using a directionsRenderer
                  new google.maps.DirectionsRenderer({
                      map: map,
                      directions: response,
                      routeIndex: i
                  });
              }
          } else {
              $("#error").append("Unable to retrieve your route<br />");

          }
      });
  }

 };
</script>

<%= link_to 'Edit', edit_walk_path(@walk) %> |
<%= link_to 'Back', walks_path %>
